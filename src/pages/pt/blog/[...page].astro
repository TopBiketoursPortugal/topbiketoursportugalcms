---
import type { Page } from 'astro';
import BlogList from '../../../components/blog/list.astro';
import BlogPagination from '../../../components/blog/pagination.astro';
import Layout, { type PaginatedProps } from '../../../layouts/Paginated.astro';
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';

type Props = {
  page: Page<CollectionEntry<'blog'>>;
};

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const posts = await getCollection('blog');
  const page = await getEntry('pages', 'blog');
  // Filter out what is already displayed in featured stories
  const filteredPosts = posts.filter((p) => (p.data.language ?? 'en') === 'pt');
  return paginate(filteredPosts, {
    pageSize: page?.data && 'page_size' in page.data ? page.data.page_size : 6
  });
}

const page = await getEntry('pages', 'blog');
const frontmatter = page?.data as PaginatedProps['frontmatter'];
const pagination = Astro.props.page;
const { data: posts } = pagination;
---

<Layout frontmatter={frontmatter}>
  <section class="blog-index mx-auto flex flex-col justify-center">
    <BlogList posts={posts} />
    <BlogPagination pagination={pagination} />
  </section>
</Layout>

<style>
  .blog-index {
    max-width: var(--pageContainer);
    padding-inline: var(--pagePadding);
  }
</style>
