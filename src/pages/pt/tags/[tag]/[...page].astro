---
import slugify from 'slugify';
import BlogList from '../../../../components/blog/list.astro';
import BlogPagination from '../../../../components/blog/pagination.astro';
import Layout from '../../../../layouts/Layout.astro';
import { getCollection, getEntry, type CollectionEntry } from 'astro:content';
import { trailingSlash } from 'utils/permalinks';

export async function getStaticPaths({ paginate }: { paginate: Function }) {
  const page = await getEntry('pages', 'blog');
  const posts = (await getCollection('blog')).filter(
    (p) => p.data.language === 'pt'
  );
  const tags = new Set(
    posts.flatMap((p) => p.data.tags ?? []).filter((t) => t && t !== '')
  );

  return [...tags].flatMap((tag) => {
    const filteredPosts = posts.filter(({ data }) => data.tags?.includes(tag));
    return paginate(filteredPosts, {
      params: {
        tag:
          slugify(tag, { lower: true, strict: true, trim: true }) +
          trailingSlash
      },

      pageSize:
        page?.data && 'page_size' in page?.data ? page?.data.page_size : 6
    });
  });
}

const tag = Astro.params.tag ?? '';
const page = (await getEntry('pages', 'blog'))!.data;

const pagination = Astro.props.page;
const filteredPosts = pagination.data;
page.title = pagination.data
  .flatMap((p: CollectionEntry<'blog'>) => p.data.tags ?? [])
  .filter(
    (t: string) => slugify(t, { lower: true, strict: true, trim: true }) === tag
  )[0];
---

<Layout title={page.title} seo={page.seo}>
  <div class="py-[96px]">
    <h1
      class="my-12 text-center text-3xl font-semibold first-letter:capitalize sm:text-4xl md:text-5xl lg:text-6xl"
    >
      {page.title}
    </h1>
    <section class="blog-index mx-auto">
      <BlogList posts={filteredPosts} />
      <BlogPagination pagination={pagination} />
    </section>
  </div>
</Layout>

<style>
  .blog-index {
    max-width: var(--pageContainer);
    padding-inline: var(--pagePadding);
  }
</style>
