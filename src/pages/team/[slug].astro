---
import { getCollection, render } from 'astro:content';
import slugify from 'slugify';
import { getMarkdownExcerpt } from 'utils/get-markdown-excerpt';
import SiteData from 'src/../data/site.json';
import ContactsData from 'src/../data/contact.json';
import Layout from 'src/layouts/Layout.astro';
import Card from 'src/components/card/Card.astro';
import Grid from 'src/components/grid/grid.astro';
import CardMedia from 'src/components/card/CardMedia.astro';
import CardContent from 'src/components/card/CardContent.astro';
import Stack from 'src/components/stack/stack.astro';

export async function getStaticPaths() {
  const team = await getCollection('team');
  return team.map((teamMember) => ({
    params: {
      slug: slugify(teamMember.data.title, { lower: true, strict: true })
    },
    props: { teamMember }
  }));
}

const language = 'en';
const { teamMember } = Astro.props;
const { title, seo, image, memberType } = teamMember.data;
const { Content } = await render(teamMember);
const excerpt = getMarkdownExcerpt(teamMember.body ?? '', 300);
const schema = {
  '@context': 'https://schema.org',
  '@type': 'Person',
  name: title,
  jobTitle: memberType,
  worksFor: {
    '@type': 'Organization',
    name: SiteData[language].site.name,
    url: SiteData[language].site.url
  },
  description: excerpt,
  address: {
    '@type': 'PostalAddress',
    addressLocality: ContactsData[language].address.state,
    addressRegion: ContactsData[language].address.city,
    postalCode: ContactsData[language].address.postalCode,
    streetAddress: ContactsData[language].address.street,
    addressCountry: ContactsData[language].address.country
  }
};
---

<Layout title={title} seo={seo}>
  <Card>
    <Grid cols={3}>
      {image && <CardMedia {...image} />}

      <CardContent
        display="inline"
        class="col-span-2 bg-white dark:bg-slate-900"
      >
        <Stack class="gap-2 p-4" layout="vertical" distribution="center">
          <strong class="text-neutral-700 dark:text-neutral-100">
            {title}
          </strong>
          <p class="text-neutral-400 dark:text-neutral-200">
            {memberType}
          </p>
          <article>
            <Content />
          </article>
        </Stack>
      </CardContent>
    </Grid>
  </Card>
  <script
    is:inline
    async
    type="application/ld+json"
    set:html={JSON.stringify(schema)}
  />
</Layout>
