---
import '../styles/main.css';
import { SEO } from 'astro-seo';
import { ClientRouter } from 'astro:transitions';
import Analytics from './common/Analytics.astro';
import SiteVerification from './common/SiteVerification.astro';
import Favicons from './common/Favicons.astro';
import CommonMeta from './common/CommonMeta.astro';
import Navigation from 'src/../data/navigation.json';
import type { LanguageCodes } from 'src/schemas/language';
import Announcement from './common/Announcement.astro';
import Header from './common/Header.astro';
import ScrollTop from './common/ScrollTop.astro';
import BasicScripts from './common/BasicScripts.astro';
import CookieConsent from './common/CookieConsent.astro';
import Footer from './common/Footer';
import { getPageSeo } from 'utils/seo';
import type { HrefLang } from 'src/types/hreflang';
// import { Breadcrumbs } from 'astro-breadcrumbs';

// import 'astro-breadcrumbs/breadcrumbs.css';

export type SEOProps = {
  page_title: string | null;
  page_description: string | null;
  featured_image: string | null;
  featured_image_alt: string | null;
  canonical_url: string | null;
  no_index: boolean | null;
  open_graph_type: string | null;
  author_twitter_handle: string | null;
  keywords?: string;
};

export type LayoutProps = {
  title?: string;
  seo?: SEOProps;
  class?: string;
  hrefLangs?: ReadonlyArray<HrefLang>;
};

const language = (Astro.currentLocale ?? 'en') as LanguageCodes;
const { seo } = Astro.props;
const { keywords } = seo ?? { keywords: '' };
const seoProps = getPageSeo(
  Astro.site ?? import.meta.env.BASE_URL,
  Astro.props,
  language
);
---

<!doctype html>
<html
  lang={language}
  dir="ltr"
  class="scroll-mt-32 scroll-pt-32 will-change-scroll motion-safe:scroll-smooth"
  x-data="{
      darkMode: localStorage.getItem('darkMode')
      || localStorage.setItem('darkMode', 'system')}"
  x-init="$watch('darkMode', val => localStorage.setItem('darkMode', val))"
  x-bind:class="{'dark': darkMode === 'dark' || (darkMode === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches)}"
>
  <head>
    <CommonMeta />
    <Favicons />
    <SiteVerification />
    <ClientRouter fallback="swap" />
    <meta name="title" content={seoProps.title} />
    {keywords ? <meta name="keywords" content={keywords} /> : null}
    <SEO {...seoProps} />
    <slot name="head" />
  </head>
  <body
    class="text-default flex min-h-screen flex-col overflow-y-scroll tracking-tight antialiased dark:bg-slate-900 dark:text-white"
  >
    <BasicScripts />
    <slot name="announcement">
      <Announcement language={language} />
    </slot>
    <Header
      {...Navigation[language].header}
      isSticky
      showRssFeed
      hrefLangs={Astro.props.hrefLangs}
    />
    <main class="h-full flex-1">
      <!-- <Breadcrumbs /> -->
      <slot />
    </main>
    <Footer language={language} />
    <ScrollTop />
    <div transition:persist="find-me-on-the-other-side" id="cc-container">
      <CookieConsent />
      <script is:inline>
        // Restore the `show--consent` class if it was present before the page swap
        document.addEventListener('astro:before-preparation', (event) => {
          const htmlClassName = window.document.documentElement.className;
          const consentClassPresent = htmlClassName.includes('show--consent')
            ? true
            : false;
          window._showConsentClass = consentClassPresent;
        });

        document.addEventListener('astro:before-swap', (event) => {
          const showConsent = window._showConsentClass ? ` show--consent` : '';
          event.newDocument.documentElement.className += showConsent;
        });
      </script>
    </div>
    <style is:global>
      :root {
        --pageContainer: 1280px;
        --pagePadding: 2rem;
      }
    </style>
  </body>
</html>
