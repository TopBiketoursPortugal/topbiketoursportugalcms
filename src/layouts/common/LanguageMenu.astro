---
import Languages from 'src/../data/languages.json';
import Icon from 'src/components/utility/icon.astro';
import type { LanguageCodes } from 'src/schemas/language';

export type LanguageMenuItem = {
  code: LanguageCodes;
  path: string;
  display?: string;
  icon?: string;
};

type Props = { localizedUrls?: ReadonlyArray<LanguageMenuItem> };
console.log(Object.values(Languages));
const languages = Object.values(Languages).map(
  ({ code, isDefault, display, icon }) =>
    ({
      code: code as LanguageCodes,
      display,
      icon,
      path: isDefault ? '/' : `/${code}`
    }) satisfies LanguageMenuItem
);

let { localizedUrls = [] } = Astro.props;

if (localizedUrls?.length === 0) {
  localizedUrls = languages;
} else {
  localizedUrls = localizedUrls.map((l) => ({
    ...l,
    display: l.display ?? Languages[l.code].display,
    icon: l.icon ?? Languages[l.code].icon
  }));
}
console.log('localizedUrls', localizedUrls);
---

<div class="flex flex-row gap-4 text-2xl">
  {
    localizedUrls.map(({ code, icon, display, path }) => (
      <a
        href={path}
        title={display}
        hreflang={code}
        class="transition-transform duration-150 hover:scale-125"
      >
        <Icon title={display} icon={icon!} />
      </a>
    ))
  }
</div>
