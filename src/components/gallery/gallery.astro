---
import { cn } from 'utils/cn';
import { Image } from 'astro:assets';

function getNavigation(pageIndex: number, totalPages: number) {
  const firstPageIndex = 0;
  const lastPageIndex = totalPages - 1;
  const isLastPageIndex = pageIndex === lastPageIndex;
  const isFirstPageIndex = pageIndex === 0;
  const prevPage =  isFirstPageIndex ? lastPageIndex : pageIndex - 1;
  const nextPage = isLastPageIndex ? firstPageIndex : pageIndex + 1;

  const prevImageTarget = `#image-${prevPage}`;
  const nextImageTarget = `#image-${ nextPage}`;
  return { prevImageTarget, nextImageTarget };
}

type Props = {
  images: {
    src: string;
    alt?: string;
  }[];
};

const { images } = Astro.props;
const imagesGlob = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/**/*.{jpeg,jpg,png,gif,avif,webp}',
  { eager: true }
);

const imagesWithImageOptimization=images.map(i=>({...i,srcOptimized:imagesGlob[i.src].default }))


---

<div class={cn('masonary', "grid grid-cols-1 items-start sm:grid-cols-3 lg:grid-cols-4 gap-4")}>
  {
    imagesWithImageOptimization.map(({srcOptimized, alt="Top Bike Tours Portugal"}, index) => {
      const { prevImageTarget, nextImageTarget } = getNavigation(
        index,
        imagesWithImageOptimization.length
      );
      return (
        <a
          href={`#image-${index}`}
          id={`image-${index}`}
          class="overflow-hidden rounded-lg h-full"
        >
          <Image
            src={srcOptimized}
            alt={alt}
             widths={[320, 500, 640, 840, 1024, 2048]}
            sizes={`(max-width: 640px) 320px, (max-width: 960px) 500px, (max-width: 1280px) 640px`}
            class="cursor-pointer rounded-lg shadow-lg hover:scale-105 ease transition-all duration-300 object-cover w-full h-full"
          />
        </a>
        <div
            class={cn(
              'nav-buttons',
              'fixed left-0 right-0 top-[50%] z-[9999] hidden content-around items-center justify-between self-center px-8'
            )}
          >
            <a
              href={prevImageTarget}
              class="rounded-lg bg-slate-800 px-2 py-4 text-3xl text-white no-underline hover:bg-slate-950"
            >
              &#10094;
            </a>
            <a
              href={nextImageTarget}
              class="rounded-lg bg-slate-800 px-2 py-4 text-3xl text-white no-underline hover:bg-slate-950"
            >
              &#10095;
            </a>
          </div>
      );
    })
  }
  <!-- Close button for the zoomed image -->
  <a
  href=""
  class={cn(
    "close-button",
    'hidden fixed top-4 right-4 text-white  text-3xl cursor-pointer z-50 no-underline hover:text-gray-400'
  )}>&times;</a
>
</div>

<style>
  /* Masonry layout using CSS Grid */
  /* Zoom-out effect using :target */
  .masonary a:target img {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1.5);
    z-index: 1000;
    width: 80%;
    height: auto;
    max-width: 90vw;
    max-height: 90vh;
    object-fit: contain;
    background: rgba(0, 0, 0, 0.8);
    padding: 1rem;
    border-radius: 0.5rem;
  }

  /* Overlay for the zoomed image */
  .masonary a:target img:before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 999;
  }

  /* Close button for the zoomed image */

  .masonary a:target ~ .close-button {
    display: block;
    z-index: 999999;
  }

  .masonary a:target + .nav-buttons {
    display: flex;
  }
</style>
