---
import { getCollection } from 'astro:content';
import Grid from 'src/components/grid/grid.astro';
import Stack from 'src/components/stack/stack.astro';
import type { LanguageCodes } from 'src/schemas/language';
import TourListSchema from 'src/components/tours/tour-list-schema.astro';
import TourCard from 'src/components/tours/tour-card.astro';
import type { TourSchema } from 'src/schemas/tours';

export type TourCollectionProps = {
  type: 'tours' | 'reviews' | 'team' | 'bikes' | 'posts';
  display: 'slideshow' | 'list';
  contentDisplay: 'overlay' | 'inline';
  frame: 'none' | 'light' | 'heavy';
  layout: 'horizontal' | 'vertical';
  title: string;
  heading: { text: string };
  tourType?: TourSchema['tourtype'];
};

type Props = TourCollectionProps;

const { contentDisplay = 'inline', tourType } = Astro.props;
console.log(tourType);

const language = (Astro.currentLocale ?? 'en') as LanguageCodes;
const tours = await getCollection(
  'tours',
  (item) =>
    item.data?.language === language &&
    ((tourType ?? '') === '' || item.data.tourtype === tourType)
);
const items =
  tours.sort((a, b) => (a?.data?.order ?? 0) - (b?.data?.order ?? 0)) ?? [];
---

<Stack class="border-solid sm:p-6" layout="vertical">
  <Grid cols={3}>
    {
      items.map(({ data }) => (
        <TourCard
          tour={data}
          contentDisplay={contentDisplay}
          language={language}
        />
      ))
    }
  </Grid>
</Stack>
<TourListSchema items={items} language={language} />
