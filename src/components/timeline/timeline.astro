---
import { tv, type VariantProps } from 'tailwind-variants';
import Prose from '../typography/prose.astro';

type Props = {
  style: VariantProps<typeof containerVariants>;
  dates: {
    date?: string;
    title?: string;
    subtitle?: string;
    description?: string;
  }[];
};

const containerVariants = tv({
  base: 'flex flex-col',
  variants: {
    padding: {
      loose: 'px-6 py-12 md:px-12 md:py-20',
      normal: 'px-4 py-6 md:px-5 md:py-8',
      tight: 'px-2 py-4 md:px-4 md:py-8'
    },
    container: {
      full: 'max-w-full',
      centered: 'mx-auto max-w-screen-xl'
    }
  },
  defaultVariants: {
    padding: 'normal',
    container: 'full'
  }
});

const culture = Astro.currentLocale === 'en' ? 'en-US' : 'pt-PT';

const dateTimeFormatter = new Intl.DateTimeFormat(culture, {
  dateStyle: 'long'
});

const { dates = [], style } = Astro.props;

const container = containerVariants({ ...style });
---

<div class={container}>
  <div class="px-12">
    {
      dates.map(({ date, title, subtitle, description }) => {
        const dateA = new Date(date ?? '').getTime();
        console.log(date, dateA);
        return (
          <div class="group relative py-6 pl-8 sm:pl-32">
            {title ? (
              <div class="font-caveat mb-1 text-2xl font-medium text-indigo-500 sm:mb-0">
                <Prose markdown={title} />
              </div>
            ) : null}
            <div class="mb-1 flex flex-col items-start before:absolute before:left-2 before:h-full before:-translate-x-1/2 before:translate-y-3 before:self-start before:bg-slate-300 before:px-px after:absolute after:left-2 after:box-content after:h-2 after:w-2 after:-translate-x-1/2 after:translate-y-1.5 after:rounded-full after:border-4 after:border-slate-50 after:bg-indigo-600 group-last:before:hidden sm:flex-row sm:before:left-0 sm:before:ml-[6.5rem] sm:after:left-0 sm:after:ml-[6.5rem]">
              {date ? (
                <time
                  data-time={date}
                  class="-left-4 -ml-5 mb-3 inline-flex h-6 w-32 min-w-fit translate-y-0.5 items-center justify-center rounded-full bg-emerald-100 px-3 text-xs font-semibold uppercase text-emerald-600 sm:absolute sm:mb-0"
                >
                  {dateTimeFormatter.format(new Date(date ?? ''))}
                </time>
              ) : null}
              {subtitle ? <Prose markdown={subtitle} /> : null}
            </div>
            {description ? <Prose markdown={description} /> : null}
          </div>
        );
      })
    }
  </div>
</div>
