---
import type { LanguageCodes } from 'src/schemas/language';
import { getBlogPagePath } from 'utils/permalinks';

export interface Pagination {
  currentPage: number;
  lastPage: number;
  url: {
    next?: string;
    prev?: string;
  };
}

interface Props {
  pagination: Pagination;
}

const { pagination } = Astro.props;
const {
  currentPage,
  lastPage,
  url: { next, prev }
} = pagination;

const language = (Astro.currentLocale ?? 'en') as LanguageCodes;

// Generate page links array
const pageLinks = Array.from({ length: lastPage }, (_, i) => i + 1);
---

{
  lastPage !== 1 && (
    <nav class="blog-pagination">
      <ul class="pagination">
        {prev && (
          <li class="page-item">
            <a class="page-link btn btn-secondary" href={prev}>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20.657"
                height="11.314"
                viewBox="0 0 20.657 11.314"
                style={{ transform: 'scale(-1, 1)' }}
              >
                <g data-name="Group 12">
                  <path d="M0 4.657h18v2H0z" data-name="Rectangle 2400" />
                  <path
                    d="M13.586 9.9l5.6568542-5.6568542 1.4142136 1.4142135-5.6568542 5.6568543z"
                    data-name="Rectangle 2401"
                  />
                  <path
                    d="M15 0l5.6568542 5.6568542-1.4142135 1.4142136-5.6568543-5.6568542z"
                    data-name="Rectangle 2402"
                  />
                </g>
              </svg>
            </a>
          </li>
        )}

        {pageLinks.map((pageNum) => (
          <li class="page-item">
            <a
              class={`page-link btn btn-secondary ${
                pageNum === currentPage ? 'active' : ''
              }`}
              href={getBlogPagePath(pageNum, language)}
            >
              {pageNum}
            </a>
          </li>
        ))}

        {next && (
          <li class="page-item">
            <a class="page-link btn btn-secondary" href={next}>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20.657"
                height="11.314"
                viewBox="0 0 20.657 11.314"
              >
                <g data-name="Group 12">
                  <path d="M0 4.657h18v2H0z" data-name="Rectangle 2400" />
                  <path
                    d="M13.586 9.9l5.6568542-5.6568542 1.4142136 1.4142135-5.6568542 5.6568543z"
                    data-name="Rectangle 2401"
                  />
                  <path
                    d="M15 0l5.6568542 5.6568542-1.4142135 1.4142136-5.6568543-5.6568542z"
                    data-name="Rectangle 2402"
                  />
                </g>
              </svg>
            </a>
          </li>
        )}
      </ul>
    </nav>
  )
}
